@model MenuDart.Models.DashboardModel
           
@{
    ViewBag.Title = "MenuDart. Easy Mobile Menus. Your Dashboard.";
    int activeCount = 0;
    int monthlyBill = 0;
}

      <!-- Main hero unit for a primary marketing message or call to action -->
      <div class="hero-unit">
        <center><h1>Your Dashboard.</h1>
        <br>
        <h2>(@Model.Email)</h2>
        </center>
        <br>
        <dl>
          <dt>Menus</dt>
          <br>
          <dd>
            @if (Model.Menus.Count() > 0)
            {
            <table class="table">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>City</th>
                  <th>Active</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model.Menus)
                {
                    <tr>                    
                      <td>@Html.DisplayFor(modelItem => item.Name)</td>
                      <td>@Html.DisplayFor(modelItem => item.City)</td>
                      <td>
                        @if (@item.Active)
                        {
                            activeCount++;
                            <text><span class="badge badge-success">Yes</span></text>
                        }
                        else
                        {
                           <text><span class="badge badge-important">No</span></text> 
                        }
                      </td>
                      <td>
                        @if (@item.Active)
                        {
                            <text>
                            <a class="btn" href="@Url.Action("ViewActiveMenu", "Menu", new { id = item.ID }, null)"><i class="icon-picture"></i> View</a>
                            <a class="btn" href="@Url.Action("Edit", "Menu", new { id = item.ID }, null)"><i class="icon-pencil"></i> Edit</a>
                            <a class="btn" href="@Url.Action("Deactivate", "Subscription", new { ReturnUrl = "/Edit/" + item.ID, id = item.ID }, null)"><i class="icon-remove"></i> Deactivate</a>
                            </text>
                        }
                        else
                        {
                            <text>
                            <a class="btn" href="@Url.Action("PreviewMenu", "Menu", new { id = item.ID, useSampleLogo = false }, null)"><i class="icon-picture"></i> Preview</a>
                            <a class="btn" href="@Url.Action("Edit", "Menu", new { id = item.ID }, null)"><i class="icon-pencil"></i> Edit</a>
                            <a id="activate_btn" class="btn" href="@Url.Action("Activate", "Subscription", new { ReturnUrl = "/Edit/" + item.ID, id = item.ID }, null)" data-loading-text="Activating..."><i class="icon-arrow-up"></i> Activate</a>
                            <a class="btn" href="@Url.Action("Delete", "Menu", new { id = item.ID }, null)"><i class="icon-trash"></i> Trash</a>
                            </text>
                        }
                      </td>
                    </tr>
                        monthlyBill = activeCount * 7;
                }               
              </tbody>
            </table>
            }
            <a class="btn btn-small btn-primary" id="create_btn" href="@Url.Action("MenuBuilder", "Menu", null, null)" data-loading-text="Loading..."><i class="icon-plus icon-white"></i> Create new menu</a>        
          </dd>
          <br>
          <br>
          <dt>Billing</dt>
          <dd>
            @if (@Model.Subscribed && @Model.TrialEnded)
            {
                if (@Model.CouponActive)
                {
                    <text>
                    You are currently <span class="badge badge-success">subscribed with @activeCount</span> active menu(s) but no charges: You are currently on a courtesy 1-month coupon that will expire on [date]. [@Html.ActionLink("Reactivate", "Unsuspend", "Subscription", new { email = Model.Email }, null)]
                    </text>
                }
                else
                {
                    <text>
                    You are currently <span class="badge badge-success">subscribed with @activeCount</span> active menu(s) for a total of $@monthlyBill per month. (@activeCount x $7 = $@monthlyBill)
                    </text>
                }
            }
            else if (!@Model.TrialEnded)
            {
                <text>
                You are currently on a <span class="badge badge-warning">free 30-day trial</span>
                </text>
                
                if (Model.TrialEndDate != null)
                {
                    <text>
                     which will end on <b>@Model.TrialEndDate</b>. 
                    </text>
                
                        if (Model.Menus.Count() > 0)
                        {
                        <text>
                        Why not @Html.ActionLink("start your subscription today?", "ActivateAll", "Subscription", new { email = Model.Email, quantity = @Model.Menus.Count() }, null)
                        </text>
                        }
                }
            }
            else
            {
                <text>
                You are currently <span class="badge badge-important">unsubscribed</span> and do not have any active menus. You do not have any charges.
                </text>
                
                if (Model.Menus.Count() > 0)
                {
                    <text>
                    Why not put your menus to use @Html.ActionLink("and activate today?", "ActivateAll", "Subscription", new { email = Model.Email, quantity = @Model.Menus.Count() }, null)
                    </text>
                }
            }
          </dd>
          <br>
          <br>
          <dt>Account</dt>
          <dd>Need to change your password? @Html.ActionLink("Do it here", "ChangePassword", "Account").
          <br>
          </dd>
          <br>
          <br>
          <dt>Talk to us</dt>
          <dd>Have a question? Or just want to give feedback? The MenuDart Support Team loves to talk!
          <br>
            Just speak your mind in the form below, and we promise to get back to you over email (email account).
          <br>
            <p>
                @using (Html.BeginForm("Index", "Dashboard", FormMethod.Post, new { @class = "form-horizontal", @name = "email_form" }))
                {
                    @Html.ValidationSummary(true)
                        <fieldset>
                        @Html.HiddenFor(model => model.Email)
                        <div class="control-group">
                            <label class="control-label">@Html.LabelFor(model => model.Feedback, "Question/Feedback")</label>
                            <div class="controls">
                                @Html.TextAreaFor(model => model.Feedback, new { @class = "input-xlarge", style = "width: 300px; height: 250px;" })
                                @Html.ValidationMessageFor(model => model.Feedback)
                            </div>
                        </div>
                        <div class="form-actions">
                          <button type="submit" value="Send" name="send_btn" id="send_btn" class="btn btn-large btn-primary" data-loading-text="Sending..." disabled><i class="icon-envelope icon-white"></i> Send</button>
                        </div>
                        </fieldset>
                }
            </p>              
          </dd>          
        </dl>
        <br>
        <p>
        </p>
      </div> <!-- hero -->

<script type="text/javascript">
    $(document).ready(function () {
        $('.input-xlarge').keyup(function (e) {
            //ignore if the tab key is pressed
            if (e.keyCode == 9) return false;
            //else enable save and cancel buttons
            document.email_form.send_btn.disabled = false;
        });
    });
</script>

<!-- Intercom.io Tracking -->
<script id="IntercomSettingsScriptTag">
    var intercomSettings = {
        app_id: '4v9tw6zz',
        email: '@Model.Email', // TODO: User's e-mail address
        created_at: @Model.SignUpDate, // TODO: User's sign-up date, Unix timestamp
        user_id: '@Model.ID', // TODO: Unique user identifier that will not change
        custom_data: {
            'Subscribed': '@Model.Subscribed',
            'Active Menus': @activeCount
        }
    };
</script>
<script>
    (function () {
        function async_load() {
            var s = document.createElement('script');
            s.type = 'text/javascript'; s.async = true;
            s.src = 'https://api.intercom.io/api/js/library.js';
            var x = document.getElementsByTagName('script')[0];
            x.parentNode.insertBefore(s, x);
        }
        if (window.attachEvent) {
            window.attachEvent('onload', async_load);
        } else {
            window.addEventListener('load', async_load, false);
        }
    })();
</script>
<script type="text/javascript">
    //stateful buttons
    $(document).ready(function () {
        $('#activate_btn').button();

        $('#activate_btn').click(function () {
            $(this).button('loading');
        });

        $('#create_btn').button();

        $('#create_btn').click(function () {
            $(this).button('loading');
        });

        $('#send_btn').button();

        $('#send_btn').click(function () {
            $(this).button('loading');
        });
    });
</script>


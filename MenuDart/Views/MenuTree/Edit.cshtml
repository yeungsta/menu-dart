@model List<MenuDart.Models.MenuNode>
           
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Categories for @ViewBag.Restaurant</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>MenuNode</legend>

        @for (int i = 0; i < Model.Count; i++)
        {
            <p>
            <h3>Category #@(i + 1)
            @Html.ActionLink("Delete", "Delete", new { id = ViewBag.MenuId, nodeIdx = (i) }, null)
            @Html.ActionLink("Edit", "Edit", new { id = ViewBag.MenuId, parent = Model[i].Link }, null)
            </h3>
            </p>              
            @Html.HiddenFor(model => model[i].ID)

            <div class="editor-label">
                @Html.LabelFor(model => model[i].Title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model[i].Title)
                @Html.ValidationMessageFor(model => model[i].Title)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model[i].Link)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model[i].Link)
                @Html.ValidationMessageFor(model => model[i].Link)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model[i].Text)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model[i].Text)
                @Html.ValidationMessageFor(model => model[i].Text)
            </div>
        }

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Menu", "Edit", "Menu", new { id = ViewBag.MenuId, parent = ViewBag.Parent }, null)
</div>

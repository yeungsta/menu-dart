@model List<MenuDart.Models.Location>

@{
    ViewBag.Title = "Edit";
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnAdd').click(function () {
                var num = $('.clonedInput').length - 1; // how many "duplicatable" input fields we currently have; -1 because we start at 0 index
                var newNum = new Number(num + 1);      // the numeric ID of the new input field being added

                // create the new element via clone(), and manipulate it's ID using newNum value
                var newElem = $('#input' + num).clone().attr('id', 'input' + newNum);

                // manipulate the name/id values of the inputs inside the new element;
                // we want to replace [0].Title with [1].Title, for example
                //newElem.children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);
                //newElem.children('input').each(function () { $(this).attr('name', 'name' + newNum); });
                newElem.$('.editor-field').children('input').each(function () {
                    $(this).attr('value', '');
                });

                // insert the new element after the last "duplicatable" input field
                $('#input' + num).after(newElem);

                // enable the "remove" button
                $('#btnDel').attr('disabled', '');

                // business rule: you can only add 5 names
                if (newNum == 5)
                    $('#btnAdd').attr('disabled', 'disabled');
            });

            $('#btnDel').click(function () {
                var num = $('.clonedInput').length - 1; // how many "duplicatable" input fields we currently have; -1 because we start at 0 index
                $('#input' + num).remove();     // remove the last element

                // enable the "add" button
                $('#btnAdd').attr('disabled', '');

                // if only one element remains, disable the "remove" button
                if (num - 1 == 1)
                    $('#btnDel').attr('disabled', 'disabled');
            });

            $('#btnDel').attr('disabled', 'disabled');
        });
    </script>
}

<h2>Edit Location(s) for @ViewBag.Restaurant</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Location</legend>

        @for (int i = 0; i < Model.Count; i++)
        {
            <p>
            <h3>Location #@(i+1)
            @Html.ActionLink("Delete", "Delete", new { id = ViewBag.MenuId, locationIdx = (i) }, null)
            </h3>
            </p>
            <!-- Start of cloneable input form -->
            <div id="input@(i)" style="margin-bottom: 4px;" class="clonedInput">
                @Html.HiddenFor(model => model[i].ID)
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Title)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Title, new { style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model[i].Title)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Address)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Address, new { style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model[i].Address)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].City)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].City, new { style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model[i].City)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].State)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].State, new { style = "width: 30px;" })
                    @Html.ValidationMessageFor(model => model[i].State)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Zip)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Zip, new { style = "width: 50px;" })
                    @Html.ValidationMessageFor(model => model[i].Zip)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].MapImgUrl)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].MapImgUrl, new { style = "width: 800px;" })
                    @Html.ValidationMessageFor(model => model[i].MapImgUrl)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].MapLink)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].MapLink, new { style = "width: 800px;" })
                    @Html.ValidationMessageFor(model => model[i].MapLink)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Hours)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model[i].Hours, new { style = "width: 300px; height: 250px;" })
                    @Html.ValidationMessageFor(model => model[i].Hours)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Phone)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Phone, new { style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model[i].Phone)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Email)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Email, new { style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model[i].Email)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Facebook)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Facebook, new { style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model[i].Facebook)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Twitter)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Twitter, new { style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model[i].Twitter)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model[i].Yelp)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model[i].Yelp, new { style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model[i].Yelp)
                </div>
            </div>
        }

        <p>
            <input type="submit" value="Save" />
            <!-- <input type="button" id="btnAdd" value="Add Another Location" /> -->
            <!-- <input type="button" id="btnDel" value="Remove Last Location" /> -->
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Menu", "Edit", "Menu", new { id = ViewBag.MenuId }, null)
</div>

@model MenuDart.Models.MenuEditorLocationViewModel

@{
    ViewBag.Title = "Edit Contact Info";
}

<div class="hero-unit">
<center>
<h1>Edit @Model.Name.</h1>
<br>
@Html.Partial("_EditorMenubar")
</center>
<br />

@using (Html.BeginForm("Edit7", "Menu", FormMethod.Post, new { @class = "form-horizontal", @name = "editor_form" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        @Html.HiddenFor(model => model.Name)
        @Html.HiddenFor(model => model.MenuId)

        @for (int i = 0; i < Model.Locations.Count; i++)
        { 
            if (Model.Locations.Count > 1)
            {
                <h4>Location @(i + 1):</h4>
            }

            @Html.HiddenFor(model => model.Locations[i].Hours)
            @Html.HiddenFor(model => model.Locations[i].MapImgUrl)
            @Html.HiddenFor(model => model.Locations[i].MapLink)        
            @Html.HiddenFor(model => model.Locations[i].Title)
            @Html.HiddenFor(model => model.Locations[i].Address)
            @Html.HiddenFor(model => model.Locations[i].City)
            @Html.HiddenFor(model => model.Locations[i].State)
            @Html.HiddenFor(model => model.Locations[i].Zip)
             
            <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => model.Locations[i].Phone, "Phone")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Locations[i].Phone, new { @class = "input-xlarge", style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model.Locations[i].Phone)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => model.Locations[i].Email, "Email")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Locations[i].Email, new { @class = "input-xlarge", style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model.Locations[i].Email)
                </div>
            </div>                         
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => model.Locations[i].Yelp, "Yelp")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Locations[i].Yelp, new { @class = "input-xlarge", style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model.Locations[i].Yelp)
                  <p class="help-block"></p>
                </div>
              </div>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => model.Locations[i].Facebook, "Facebook")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Locations[i].Facebook, new { @class = "input-xlarge", style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model.Locations[i].Facebook)
                  <p class="help-block"></p>
                </div>
              </div>            
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => model.Locations[i].Twitter, "Twitter")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.Locations[i].Twitter, new { @class = "input-xlarge", style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model.Locations[i].Twitter)
                  <p class="help-block"></p>
                </div>
              </div>
        }

        <div class="form-actions">
            @Html.Partial("_EditorButtons")
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Dashboard", "Index", "Dashboard")
</div>

</div> <!-- hero -->

@Html.Partial("_FormValidation")
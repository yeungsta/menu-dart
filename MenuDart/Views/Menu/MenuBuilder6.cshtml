@model List<MenuDart.Models.Location>
           
@{
    ViewBag.Title = "MenuDart. Easy Mobile Menus. Menu Builder.";
}

      <!-- Main hero unit for a primary marketing message or call to action -->
      <div class="hero-unit">
        <center><h1>Menu Builder.</h1></center>
        <br>
        <center>Now fill out the location info for your restaurant:</center>
        <br>
        <p>
        @using (Html.BeginForm("MenuBuilder6", "Menu", FormMethod.Post, new { @class = "form-horizontal" }))
        {
          @Html.ValidationSummary(true)
            <fieldset>
            @for (int i = 0; i < Model.Count; i++)
            { 
                <h3>Location @(i + 1):</h3>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => Model[i].Title, "Name of location")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => Model[i].Title, new { @class = "input-xlarge", style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => Model[i].Title)
                  <p class="help-block">Optional.</p>
                </div>
              </div>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => Model[i].Address, "Address")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => Model[i].Address, new { @class = "input-xlarge", style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => Model[i].Address)
                  <p class="help-block"></p>
                </div>
              </div>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => Model[i].City, "City")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => Model[i].City, new { @class = "input-xlarge", style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => Model[i].City)
                  <p class="help-block"></p>
                </div>
              </div>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => Model[i].State, "State")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => Model[i].State, new { @class = "input-xlarge", style = "width: 30px;" })
                    @Html.ValidationMessageFor(model => Model[i].State)
                  <p class="help-block"></p>
                </div>
              </div>
              <div class="control-group">
                <label class="control-label">@Html.LabelFor(model => Model[i].Zip, "Zip")</label>
                <div class="controls">
                    @Html.TextBoxFor(model => Model[i].Zip, new { @class = "input-xlarge", style = "width: 50px;" })
                    @Html.ValidationMessageFor(model => Model[i].Zip)
                  <p class="help-block"></p>
                </div>
              </div>
            }           
            <div class="form-actions">
              <button type="submit" value="Next" class="btn btn-large btn-primary">Next <i class="icon-chevron-right icon-white"></i></button>
            </div>          
            </fieldset>
        }            
        </p>
            One step closer...
            <div class="progress progress-striped">
              <div class="bar" style="width: 70%;">
              </div>
            </div>
      </div> <!-- hero -->

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@model MenuDart.Models.MenuEditorAboutViewModel

@{
    ViewBag.Title = "Edit About";
}

<div class="hero-unit">
<center>
<h1>Edit @Model.Name.</h1>
<br>
<h4>
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Basic Info", "Edit", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Theme", "Edit2", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "About", "Edit3", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Logo", "Edit4", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Location", "Edit5", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Hours", "Edit6", "Menu", new { id = Model.MenuId }) |
@MenuDart.Controllers.MenuExtensions.EditMenuItem(Html, "Contact", "Edit7", "Menu", new { id = Model.MenuId }) |
@Html.ActionLink("Menu Items", "Details", "MenuTree", new { id = Model.MenuId, parent = 0, idx = -1, source = "MenuEditor", ReturnUrl = "/Edit/" + Model.MenuId }, null) |
@Html.ActionLink("Preview", "PreviewMenu", "Menu", new { id = Model.MenuId }, null) |
@Html.ActionLink("Publish", "Publish", "Menu", new { ReturnUrl = "/Edit/" + Model.MenuId, id = Model.MenuId }, null)
</h4>
</center>
<br />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit3", "Menu", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edit info about your restaurant on this page.</legend>

        @Html.HiddenFor(model => model.Name)
        @Html.HiddenFor(model => model.MenuId)

        <div class="control-group">
            <label class="control-label">@Html.LabelFor(model => model.AboutTitle, "Title")</label>
            <div class="controls">
            @Html.TextAreaFor(model => model.AboutTitle, new { @class = "input-xlarge", style = "width: 300px; height: 50px;" })
            @Html.ValidationMessageFor(model => model.AboutTitle)
            </div>
        </div>

        <div class="control-group">
            <label class="control-label">@Html.LabelFor(model => model.AboutText, "Description")</label>
            <div class="controls">
            @Html.TextAreaFor(model => model.AboutText, new { @class = "input-xlarge", style = "width: 300px; height: 250px;" })
            @Html.ValidationMessageFor(model => model.AboutText)
            </div>
        </div>  

        <div class="form-actions">
            <button type="submit" value="Save" class="btn btn-large btn-primary"><i class="icon-ok icon-white"></i> Save</button>
            <a class="btn btn-primary btn-large" href="@Url.Action("Index", "Dashboard")"><i class="icon-remove icon-white"></i> Cancel</a>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Dashboard", "Index", "Dashboard")
</div>

</div> <!-- hero -->
